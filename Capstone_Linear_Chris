{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"name":"Capstone_Linear_Chris","provenance":[{"file_id":"1eShuyownKZL5rj5H0HMSgqJNMD25oAbZ","timestamp":1578615402462}],"collapsed_sections":[]},"kernelspec":{"name":"python3","display_name":"Python 3"}},"cells":[{"cell_type":"code","metadata":{"id":"TdkAecG6QZ4U","colab_type":"code","outputId":"4935f34d-1473-425a-8612-b05448badca5","executionInfo":{"status":"ok","timestamp":1578086061025,"user_tz":300,"elapsed":11691,"user":{"displayName":"Christopher Lattanzio","photoUrl":"https://lh3.googleusercontent.com/a-/AAuE7mAZZPFLSjK4IdG_ds-sFPhjRh5M6TtRV24SIMmy=s64","userId":"16054195019132294960"}},"colab":{"base_uri":"https://localhost:8080/","height":683}},"source":["pip install --upgrade google-cloud-bigquery"],"execution_count":0,"outputs":[{"output_type":"stream","text":["Collecting google-cloud-bigquery\n","\u001b[?25l  Downloading https://files.pythonhosted.org/packages/b5/6c/b3ae29876dbbd63ca8fdf284fdf07ef025c06feacb18710e9571f6641246/google_cloud_bigquery-1.23.1-py2.py3-none-any.whl (162kB)\n","\r\u001b[K     |██                              | 10kB 18.4MB/s eta 0:00:01\r\u001b[K     |████                            | 20kB 1.8MB/s eta 0:00:01\r\u001b[K     |██████                          | 30kB 2.3MB/s eta 0:00:01\r\u001b[K     |████████                        | 40kB 1.7MB/s eta 0:00:01\r\u001b[K     |██████████                      | 51kB 1.9MB/s eta 0:00:01\r\u001b[K     |████████████                    | 61kB 2.2MB/s eta 0:00:01\r\u001b[K     |██████████████                  | 71kB 2.4MB/s eta 0:00:01\r\u001b[K     |████████████████                | 81kB 2.6MB/s eta 0:00:01\r\u001b[K     |██████████████████              | 92kB 2.9MB/s eta 0:00:01\r\u001b[K     |████████████████████▏           | 102kB 2.8MB/s eta 0:00:01\r\u001b[K     |██████████████████████▏         | 112kB 2.8MB/s eta 0:00:01\r\u001b[K     |████████████████████████▏       | 122kB 2.8MB/s eta 0:00:01\r\u001b[K     |██████████████████████████▏     | 133kB 2.8MB/s eta 0:00:01\r\u001b[K     |████████████████████████████▏   | 143kB 2.8MB/s eta 0:00:01\r\u001b[K     |██████████████████████████████▏ | 153kB 2.8MB/s eta 0:00:01\r\u001b[K     |████████████████████████████████| 163kB 2.8MB/s \n","\u001b[?25hRequirement already satisfied, skipping upgrade: google-cloud-core<2.0dev,>=1.0.3 in /usr/local/lib/python3.6/dist-packages (from google-cloud-bigquery) (1.0.3)\n","Collecting six<2.0.0dev,>=1.13.0\n","  Downloading https://files.pythonhosted.org/packages/65/26/32b8464df2a97e6dd1b656ed26b2c194606c16fe163c695a992b36c11cdf/six-1.13.0-py2.py3-none-any.whl\n","Requirement already satisfied, skipping upgrade: google-resumable-media!=0.4.0,<0.6.0dev,>=0.3.1 in /usr/local/lib/python3.6/dist-packages (from google-cloud-bigquery) (0.4.1)\n","Requirement already satisfied, skipping upgrade: protobuf>=3.6.0 in /usr/local/lib/python3.6/dist-packages (from google-cloud-bigquery) (3.10.0)\n","Requirement already satisfied, skipping upgrade: google-api-core<2.0.0dev,>=1.14.0 in /usr/local/lib/python3.6/dist-packages (from google-cloud-core<2.0dev,>=1.0.3->google-cloud-bigquery) (1.15.0)\n","Requirement already satisfied, skipping upgrade: setuptools in /usr/local/lib/python3.6/dist-packages (from protobuf>=3.6.0->google-cloud-bigquery) (42.0.2)\n","Requirement already satisfied, skipping upgrade: googleapis-common-protos<2.0dev,>=1.6.0 in /usr/local/lib/python3.6/dist-packages (from google-api-core<2.0.0dev,>=1.14.0->google-cloud-core<2.0dev,>=1.0.3->google-cloud-bigquery) (1.6.0)\n","Requirement already satisfied, skipping upgrade: requests<3.0.0dev,>=2.18.0 in /usr/local/lib/python3.6/dist-packages (from google-api-core<2.0.0dev,>=1.14.0->google-cloud-core<2.0dev,>=1.0.3->google-cloud-bigquery) (2.21.0)\n","Requirement already satisfied, skipping upgrade: google-auth<2.0dev,>=0.4.0 in /usr/local/lib/python3.6/dist-packages (from google-api-core<2.0.0dev,>=1.14.0->google-cloud-core<2.0dev,>=1.0.3->google-cloud-bigquery) (1.4.2)\n","Requirement already satisfied, skipping upgrade: pytz in /usr/local/lib/python3.6/dist-packages (from google-api-core<2.0.0dev,>=1.14.0->google-cloud-core<2.0dev,>=1.0.3->google-cloud-bigquery) (2018.9)\n","Requirement already satisfied, skipping upgrade: idna<2.9,>=2.5 in /usr/local/lib/python3.6/dist-packages (from requests<3.0.0dev,>=2.18.0->google-api-core<2.0.0dev,>=1.14.0->google-cloud-core<2.0dev,>=1.0.3->google-cloud-bigquery) (2.8)\n","Requirement already satisfied, skipping upgrade: urllib3<1.25,>=1.21.1 in /usr/local/lib/python3.6/dist-packages (from requests<3.0.0dev,>=2.18.0->google-api-core<2.0.0dev,>=1.14.0->google-cloud-core<2.0dev,>=1.0.3->google-cloud-bigquery) (1.24.3)\n","Requirement already satisfied, skipping upgrade: certifi>=2017.4.17 in /usr/local/lib/python3.6/dist-packages (from requests<3.0.0dev,>=2.18.0->google-api-core<2.0.0dev,>=1.14.0->google-cloud-core<2.0dev,>=1.0.3->google-cloud-bigquery) (2019.11.28)\n","Requirement already satisfied, skipping upgrade: chardet<3.1.0,>=3.0.2 in /usr/local/lib/python3.6/dist-packages (from requests<3.0.0dev,>=2.18.0->google-api-core<2.0.0dev,>=1.14.0->google-cloud-core<2.0dev,>=1.0.3->google-cloud-bigquery) (3.0.4)\n","Requirement already satisfied, skipping upgrade: cachetools>=2.0.0 in /usr/local/lib/python3.6/dist-packages (from google-auth<2.0dev,>=0.4.0->google-api-core<2.0.0dev,>=1.14.0->google-cloud-core<2.0dev,>=1.0.3->google-cloud-bigquery) (4.0.0)\n","Requirement already satisfied, skipping upgrade: pyasn1-modules>=0.2.1 in /usr/local/lib/python3.6/dist-packages (from google-auth<2.0dev,>=0.4.0->google-api-core<2.0.0dev,>=1.14.0->google-cloud-core<2.0dev,>=1.0.3->google-cloud-bigquery) (0.2.7)\n","Requirement already satisfied, skipping upgrade: rsa>=3.1.4 in /usr/local/lib/python3.6/dist-packages (from google-auth<2.0dev,>=0.4.0->google-api-core<2.0.0dev,>=1.14.0->google-cloud-core<2.0dev,>=1.0.3->google-cloud-bigquery) (4.0)\n","Requirement already satisfied, skipping upgrade: pyasn1<0.5.0,>=0.4.6 in /usr/local/lib/python3.6/dist-packages (from pyasn1-modules>=0.2.1->google-auth<2.0dev,>=0.4.0->google-api-core<2.0.0dev,>=1.14.0->google-cloud-core<2.0dev,>=1.0.3->google-cloud-bigquery) (0.4.8)\n","\u001b[31mERROR: google-colab 1.0.0 has requirement six~=1.12.0, but you'll have six 1.13.0 which is incompatible.\u001b[0m\n","\u001b[31mERROR: datascience 0.10.6 has requirement folium==0.2.1, but you'll have folium 0.8.3 which is incompatible.\u001b[0m\n","\u001b[31mERROR: albumentations 0.1.12 has requirement imgaug<0.2.7,>=0.2.5, but you'll have imgaug 0.2.9 which is incompatible.\u001b[0m\n","Installing collected packages: six, google-cloud-bigquery\n","  Found existing installation: six 1.12.0\n","    Uninstalling six-1.12.0:\n","      Successfully uninstalled six-1.12.0\n","  Found existing installation: google-cloud-bigquery 1.21.0\n","    Uninstalling google-cloud-bigquery-1.21.0:\n","      Successfully uninstalled google-cloud-bigquery-1.21.0\n","Successfully installed google-cloud-bigquery-1.23.1 six-1.13.0\n"],"name":"stdout"},{"output_type":"display_data","data":{"application/vnd.colab-display-data+json":{"pip_warning":{"packages":["google","six"]}}},"metadata":{"tags":[]}}]},{"cell_type":"code","metadata":{"id":"ETQNsYO0Qav5","colab_type":"code","outputId":"6d480263-c371-4bc6-af9f-c5269f9b2a9d","executionInfo":{"status":"ok","timestamp":1578615557749,"user_tz":300,"elapsed":37225,"user":{"displayName":"Christopher Lattanzio","photoUrl":"https://lh3.googleusercontent.com/a-/AAuE7mAZZPFLSjK4IdG_ds-sFPhjRh5M6TtRV24SIMmy=s64","userId":"16054195019132294960"}},"colab":{"base_uri":"https://localhost:8080/","height":139}},"source":["from google.colab import auth\n","auth.authenticate_user()\n","\n","from google.cloud import bigquery\n","\n","# https://cloud.google.com/resource-manager/docs/creating-managing-projects\n","project_id = 'capstone-247602'\n","client = bigquery.Client(project=project_id)\n","\n","for dataset in client.list_datasets():\n","  print(dataset.dataset_id)\n","\n","import pandas as pd\n","\n","# https://cloud.google.com/resource-manager/docs/creating-managing-projects\n","project_id = 'capstone-247602'\n","df_full = pd.io.gbq.read_gbq('''\n","SELECT * FROM `capstone-247602.combined_digital_linear.tbl_title_matching_stage_3_FINAL`''', \n","project_id=project_id, verbose=False)\n"],"execution_count":5,"outputs":[{"output_type":"stream","text":["Digital_Data\n","Nielsen_Data\n","combined_digital_linear\n","predictions\n"],"name":"stdout"},{"output_type":"stream","text":["/usr/local/lib/python3.6/dist-packages/pandas/io/gbq.py:176: FutureWarning: verbose is deprecated and will be removed in a future version. Set logging level in order to vary verbosity\n","  **kwargs\n"],"name":"stderr"}]},{"cell_type":"code","metadata":{"id":"tgr3HmKTQdQP","colab_type":"code","outputId":"f98ec898-d2ab-4b03-d1c4-32945e8f848a","executionInfo":{"status":"ok","timestamp":1578616253066,"user_tz":300,"elapsed":402,"user":{"displayName":"Christopher Lattanzio","photoUrl":"https://lh3.googleusercontent.com/a-/AAuE7mAZZPFLSjK4IdG_ds-sFPhjRh5M6TtRV24SIMmy=s64","userId":"16054195019132294960"}},"colab":{"base_uri":"https://localhost:8080/","height":595}},"source":["\n","show_name = \"SUPERSTORE\"\n","show_table = df_full[df_full.Show_Name == show_name]\n","#show_table = df_full[df_full.genre_dummy == 2]\n","#show_table = df_full\n","#show_table.sort_values(by='airdate')\n","show_table['days_since_last_episode'] = show_table.groupby('Season')['airdate'].diff().fillna(0).astype(str).str[:2]\n","show_table['days_since_1st_episode'] = (show_table.airdate - show_table.airdate.min()).astype(str).str[:2]\n","#df = show_table[['days_since_last_episode','days_since_1st_episode','Percent_Digital_Viewership','Percent_Linear_Viewership',\n","#                         'weekday','season_number', 'average_mins_viewed', 'Imps',\n","#                         'episode_number','quarter','start_hour_dummy','Season','genre_dummy', 'airdate']]\n","\n","df = show_table[['airdate', 'average_mins_viewed', 'Imps','dummy_weekday','dummy_10pm','dummy_9pm','dummy_8pm','dummy_genre_alt',\n","                 'dummy_genre_dra', 'dummy_genre_com' ]]\n","\n","df['airdate']= pd.to_datetime(df['airdate']) \n","df = df.set_index('airdate')\n","\n","df.head()\n","#len(df)"],"execution_count":18,"outputs":[{"output_type":"stream","text":["/usr/local/lib/python3.6/dist-packages/ipykernel_launcher.py:7: FutureWarning: Passing integers to fillna is deprecated, will raise a TypeError in a future version.  To retain the old behavior, pass pd.Timedelta(seconds=n) instead.\n","  import sys\n","/usr/local/lib/python3.6/dist-packages/ipykernel_launcher.py:7: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame.\n","Try using .loc[row_indexer,col_indexer] = value instead\n","\n","See the caveats in the documentation: http://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  import sys\n","/usr/local/lib/python3.6/dist-packages/ipykernel_launcher.py:8: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame.\n","Try using .loc[row_indexer,col_indexer] = value instead\n","\n","See the caveats in the documentation: http://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  \n","/usr/local/lib/python3.6/dist-packages/ipykernel_launcher.py:16: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame.\n","Try using .loc[row_indexer,col_indexer] = value instead\n","\n","See the caveats in the documentation: http://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  app.launch_new_instance()\n"],"name":"stderr"},{"output_type":"execute_result","data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>average_mins_viewed</th>\n","      <th>Imps</th>\n","      <th>dummy_weekday</th>\n","      <th>dummy_10pm</th>\n","      <th>dummy_9pm</th>\n","      <th>dummy_8pm</th>\n","      <th>dummy_genre_alt</th>\n","      <th>dummy_genre_dra</th>\n","      <th>dummy_genre_com</th>\n","    </tr>\n","    <tr>\n","      <th>airdate</th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>2015-11-30</th>\n","      <td>1.413085e+06</td>\n","      <td>8248366</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>2016-01-04</th>\n","      <td>1.902009e+06</td>\n","      <td>6867139</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>2016-01-11</th>\n","      <td>1.842468e+06</td>\n","      <td>6196708</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>2016-01-18</th>\n","      <td>1.825329e+06</td>\n","      <td>6539492</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>2016-01-25</th>\n","      <td>1.845576e+06</td>\n","      <td>5746366</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>"],"text/plain":["            average_mins_viewed     Imps  ...  dummy_genre_dra  dummy_genre_com\n","airdate                                   ...                                  \n","2015-11-30         1.413085e+06  8248366  ...                0                1\n","2016-01-04         1.902009e+06  6867139  ...                0                1\n","2016-01-11         1.842468e+06  6196708  ...                0                1\n","2016-01-18         1.825329e+06  6539492  ...                0                1\n","2016-01-25         1.845576e+06  5746366  ...                0                1\n","\n","[5 rows x 9 columns]"]},"metadata":{"tags":[]},"execution_count":18}]},{"cell_type":"code","metadata":{"id":"fvAQeG7pYDV5","colab_type":"code","colab":{}},"source":["# imports\n","import math, datetime\n","import numpy as np\n","import pandas as pd\n","from sklearn import preprocessing, svm\n","from sklearn.model_selection import cross_validate\n","from sklearn.linear_model import LinearRegression\n","from sklearn.model_selection import train_test_split\n","from sklearn import linear_model\n","import matplotlib.pyplot as plt\n","from matplotlib import style\n","\n","\n","\n","style.use('ggplot')"],"execution_count":0,"outputs":[]},{"cell_type":"code","metadata":{"id":"LOKCMqsbyIFv","colab_type":"code","outputId":"78f41107-eaf1-4e78-cf25-8c16f65dc330","executionInfo":{"status":"ok","timestamp":1578616256224,"user_tz":300,"elapsed":370,"user":{"displayName":"Christopher Lattanzio","photoUrl":"https://lh3.googleusercontent.com/a-/AAuE7mAZZPFLSjK4IdG_ds-sFPhjRh5M6TtRV24SIMmy=s64","userId":"16054195019132294960"}},"colab":{"base_uri":"https://localhost:8080/","height":34}},"source":["#Single variable run\n","\n","forecast_col = 'average_mins_viewed'\n","#forecast_col = 'Imps'\n","\n","df.fillna(-99999, inplace=True)\n","\n","# number to forecast out\n","forecast_out = 30 #int(math.ceil(0.01*len(df)))\n","\n","df['label'] = df[forecast_col].shift(-forecast_out)\n","\n","# define variables\n","X = np.array(df.drop(['label'],1))\n","\n","# Scale X - all values have to be scaled together\n","\n","X = preprocessing.scale(X)\n","X = X[:-forecast_out]\n","X_lately = X[-forecast_out:]\n","\n","df.dropna(inplace=True)\n","y = np.array(df['label'])\n","\n","print(len(X),len(X_lately),len(y))\n"],"execution_count":19,"outputs":[{"output_type":"stream","text":["39 30 39\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"9wSIAYA1GGL-","colab_type":"code","outputId":"1a336728-f229-4748-efd5-cd1514dde0eb","executionInfo":{"status":"ok","timestamp":1578616259751,"user_tz":300,"elapsed":421,"user":{"displayName":"Christopher Lattanzio","photoUrl":"https://lh3.googleusercontent.com/a-/AAuE7mAZZPFLSjK4IdG_ds-sFPhjRh5M6TtRV24SIMmy=s64","userId":"16054195019132294960"}},"colab":{"base_uri":"https://localhost:8080/","height":170}},"source":["#Single variable run\n","\n","# Split testing and training data\n","X_train, X_test, y_train, y_test = train_test_split(X, y ,test_size = 0.25, random_state=42)\n","\n","# Train Model - set clf to the model you want to use\n","clf = LinearRegression(fit_intercept=True,normalize=True,copy_X=True,n_jobs=10)\n","#clf = svm.SVR()\n","#clf = linear_model.Ridge(alpha=.5)\n","#clf = linear_model.Lasso(alpha=0.1)\n","clf.fit(X_train, y_train)\n","accuracy = clf.score(X_test, y_test)\n","\n","#print(accuracy)\n","\n","# Forecast using the older data\n","forecast_set = clf.predict(X_lately)\n","forecast_set_test = clf.predict(X_test)\n","\n","print(forecast_set, accuracy, forecast_out)\n","print(len(X_train), len(X_test), len(y_train), len(y_test))\n","\n","#X_train.shape\n","#X_test.shape\n","#y_train.shape\n","#y_test.shape\n"],"execution_count":20,"outputs":[{"output_type":"stream","text":["[1561186.40569857 1576428.04819433 1614368.44814012 1651561.99991472\n"," 1565858.69108152 1764366.8076486  1786104.52619252 1720850.91799708\n"," 1581517.41143808 1686062.12186538 1726164.57468561 1743954.9272008\n"," 1662197.20049416 1729761.52710206 1700601.63073764 1672671.43641258\n"," 1750092.27874044 1776583.62571283 1752181.60666321 1653387.6777805\n"," 1757548.56498828 1816511.83432798 1819068.87387683 1818192.83646341\n"," 1814536.97175144 1687097.56397959 1738463.61596247 1786040.18605487\n"," 1729271.43004582 1728246.34983233] 0.7536471488581837 30\n","29 10 29 10\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"uDp5nfYqGGVY","colab_type":"code","colab":{}},"source":["#Single run\n","\n","df['Forecast'] = np.nan\n","\n","\n","# Set up forecasting dates\n","last_date =df.iloc[-1].name\n","last_unix = last_date.timestamp()\n","one_day = 86400\n","next_unix = last_unix + one_day\n","\n","# add forecast rows to dataframe\n","for i in forecast_set:\n","  next_date = datetime.datetime.fromtimestamp(next_unix)\n","  next_unix += one_day\n","  df.loc[next_date] = [np.nan for _ in range(len(df.columns)-1)] + [i]"],"execution_count":0,"outputs":[]},{"cell_type":"code","metadata":{"id":"BBys7yYRGGbs","colab_type":"code","outputId":"3cad384e-f32b-488b-e7c7-631c320d994d","executionInfo":{"status":"ok","timestamp":1578615945952,"user_tz":300,"elapsed":4228,"user":{"displayName":"Christopher Lattanzio","photoUrl":"https://lh3.googleusercontent.com/a-/AAuE7mAZZPFLSjK4IdG_ds-sFPhjRh5M6TtRV24SIMmy=s64","userId":"16054195019132294960"}},"colab":{"base_uri":"https://localhost:8080/","height":314}},"source":["# Single Run\n","\n","# plot the forecasts\n","df['airdate'] = df.index\n","\n","import pandas_gbq as gbq\n","gbq.to_gbq(df, 'predictions.LR_SUPERSTORE', project_id, if_exists='replace')\n","\n","df['average_mins_viewed'].plot()\n","df['Forecast'].plot()\n","plt.legend(loc=4)\n","plt.xlabel('Date')\n","plt.ylabel('average_mins_viewed')\n","plt.title(show_name + \" - \" + str(clf))\n","plt.show()\n","\n"],"execution_count":17,"outputs":[{"output_type":"stream","text":["1it [00:03,  3.03s/it]\n"],"name":"stderr"},{"output_type":"display_data","data":{"image/png":"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\ncmci7/eyc+dOat26NRkaGpKbmxv9/fffREQkiiI5OzvTggULVOp99uwZmZub08aNG6k0rl+/TmZm\nZrRy5UpKT0+nJk2aUP/+/Ut1bEn+/fdfAkBHjx4t9FybNm0oICCApk6dSg4ODlS7dm0iUrYSfv31\n1yr7+vv705tvvik9FkWRlixZQvXr1ydDQ0Nq0KABffnll5STk1Pq2AYOHKi29XHq1Knk5uZGRERr\n1qwp1LKyaNGiEsvOX0b+x7/88gvVr1+fTE1NydfXl27evElERH/++WehekaPHl3q1+rg4EBz5syh\nUaNGkbW1NbVv356IiFJSUuijjz4iJycnMjAwIGdnZ5Vze//+ffL39yeFQkHm5ubUrl07les4L64/\n/viDWrZsSYaGhtS0aVM6fPgwERFduXKlUNz5f0/lkVemurt07u7uFBgYSJMmTSI7OzupxV7d38p+\n/fpRnz59pMe5ubm0ePFiqlevHhkaGpKrqystXbqUcnNzyxSfu7s7TZw4kaZNm0a2trakUCho9OjR\npb4rtH37dgJAqamp0rYDBw6Ql5cXGRoako2NDQ0bNoySkpKk5/NahteuXUs1a9YkIyMj6tWrl8rn\n+/Xr16lXr15kbW1NRkZG5OLiQqtXry7Ta1MnKSmpyJbh7t27U/fu3VW2jRw5ktzd3ctUR1BQECkU\nCtq/f790N9nLy4suXLigsl9pz1NoaCjVq1ePZDIZxcXFUZ8+fahfv360cOFCcnR0JHNzcwoMDKTc\n3Fz65ptvyMnJiWxsbCgwMFDlfbVjxw7y8fEhKysrsrKyos6dO9P58+dVYip47eXPffJ+1wX/5T8/\nly5dop49e5K5uTnZ2NhQz5496dq1a2U6f0UpKoccPXo0tW3blr799ltydnYmmUxGiYmJ9Oabb5K/\nv7/Kvl9//TU5ODiobPvtt9+kz4NatWrR+PHjVa5nIqKffvqJrK2tS/X+KvGrSrVq1bB3714kJiaW\nnFmXk7GxsUrrYFk9f/4c33//PQCofEOvVq0aDh8+jPv375e7bCLCjz/+CH9/f9SuXbvQ8zNmzEBG\nRgZ+++03tcdnZWVh7dq1hWLTRnPnzkX79u0RHR2N6dOnY8aMGfj777+l50eNGoVt27Zh7dq1uHLl\nCmbNmoWpU6ciNDRUpZxvvvkGFy9exPbt23Hnzh21384nT56MqVOn4sqVK+jdu3eh54s6bwcOHECf\n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\n","text/plain":["<Figure size 432x288 with 1 Axes>"]},"metadata":{"tags":[]}}]},{"cell_type":"code","metadata":{"id":"fr9xLrEGd3yL","colab_type":"code","outputId":"194d5e70-92ac-4716-e899-bff193b7d410","executionInfo":{"status":"error","timestamp":1578614396211,"user_tz":300,"elapsed":853,"user":{"displayName":"Christopher Lattanzio","photoUrl":"https://lh3.googleusercontent.com/a-/AAuE7mAZZPFLSjK4IdG_ds-sFPhjRh5M6TtRV24SIMmy=s64","userId":"16054195019132294960"}},"colab":{"base_uri":"https://localhost:8080/","height":377}},"source":["# feature selection\n","from sklearn.svm import LinearSVC\n","from sklearn.feature_selection import SelectFromModel\n","\n","lsvc = LinearSVC(C=0.01, penalty=\"l1\", dual=False).fit(X, y)\n","model = SelectFromModel(lsvc, prefit=True)\n","X_new = model.transform(X)\n","X_new.shape          \n"],"execution_count":0,"outputs":[{"output_type":"error","ename":"ValueError","evalue":"ignored","traceback":["\u001b[0;31m---------------------------------------------------------------------------\u001b[0m","\u001b[0;31mValueError\u001b[0m                                Traceback (most recent call last)","\u001b[0;32m<ipython-input-155-1d51afcd4546>\u001b[0m in \u001b[0;36m<module>\u001b[0;34m()\u001b[0m\n\u001b[1;32m      4\u001b[0m \u001b[0mlsvc\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mLinearRegression\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mfit_intercept\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;32mTrue\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0mnormalize\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;32mTrue\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0mcopy_X\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;32mTrue\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0mn_jobs\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;36m10\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      5\u001b[0m \u001b[0mmodel\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mSelectFromModel\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mlsvc\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mprefit\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;32mTrue\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m----> 6\u001b[0;31m \u001b[0mX_new\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mmodel\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mtransform\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mX\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m      7\u001b[0m \u001b[0mX_new\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mshape\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.6/dist-packages/sklearn/feature_selection/_base.py\u001b[0m in \u001b[0;36mtransform\u001b[0;34m(self, X)\u001b[0m\n\u001b[1;32m     75\u001b[0m         X = check_array(X, dtype=None, accept_sparse='csr',\n\u001b[1;32m     76\u001b[0m                         force_all_finite=not tags.get('allow_nan', True))\n\u001b[0;32m---> 77\u001b[0;31m         \u001b[0mmask\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mget_support\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m     78\u001b[0m         \u001b[0;32mif\u001b[0m \u001b[0;32mnot\u001b[0m \u001b[0mmask\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0many\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     79\u001b[0m             warn(\"No features were selected: either the data is\"\n","\u001b[0;32m/usr/local/lib/python3.6/dist-packages/sklearn/feature_selection/_base.py\u001b[0m in \u001b[0;36mget_support\u001b[0;34m(self, indices)\u001b[0m\n\u001b[1;32m     44\u001b[0m             \u001b[0mvalues\u001b[0m \u001b[0mare\u001b[0m \u001b[0mindices\u001b[0m \u001b[0minto\u001b[0m \u001b[0mthe\u001b[0m \u001b[0minput\u001b[0m \u001b[0mfeature\u001b[0m \u001b[0mvector\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     45\u001b[0m         \"\"\"\n\u001b[0;32m---> 46\u001b[0;31m         \u001b[0mmask\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_get_support_mask\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m     47\u001b[0m         \u001b[0;32mreturn\u001b[0m \u001b[0mmask\u001b[0m \u001b[0;32mif\u001b[0m \u001b[0;32mnot\u001b[0m \u001b[0mindices\u001b[0m \u001b[0;32melse\u001b[0m \u001b[0mnp\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mwhere\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mmask\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;36m0\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     48\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.6/dist-packages/sklearn/feature_selection/_from_model.py\u001b[0m in \u001b[0;36m_get_support_mask\u001b[0;34m(self)\u001b[0m\n\u001b[1;32m    176\u001b[0m                              \u001b[0;34m' \"prefit=True\" while passing the fitted'\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    177\u001b[0m                              ' estimator to the constructor.')\n\u001b[0;32m--> 178\u001b[0;31m         \u001b[0mscores\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0m_get_feature_importances\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mestimator\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mnorm_order\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    179\u001b[0m         \u001b[0mthreshold\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0m_calculate_threshold\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mestimator\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mscores\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mthreshold\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    180\u001b[0m         \u001b[0;32mif\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mmax_features\u001b[0m \u001b[0;32mis\u001b[0m \u001b[0;32mnot\u001b[0m \u001b[0;32mNone\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.6/dist-packages/sklearn/feature_selection/_from_model.py\u001b[0m in \u001b[0;36m_get_feature_importances\u001b[0;34m(estimator, norm_order)\u001b[0m\n\u001b[1;32m     30\u001b[0m             \u001b[0;34m\"`feature_importances_` attribute. Either pass a fitted estimator\"\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     31\u001b[0m             \u001b[0;34m\" to SelectFromModel or call fit before calling transform.\"\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m---> 32\u001b[0;31m             % estimator.__class__.__name__)\n\u001b[0m\u001b[1;32m     33\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     34\u001b[0m     \u001b[0;32mreturn\u001b[0m \u001b[0mimportances\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;31mValueError\u001b[0m: The underlying estimator LinearRegression has no `coef_` or `feature_importances_` attribute. Either pass a fitted estimator to SelectFromModel or call fit before calling transform."]}]},{"cell_type":"code","metadata":{"id":"QFRTF7Aued1G","colab_type":"code","outputId":"8ac67a1f-d1d1-4ca2-c9d4-36bd20e12f3c","executionInfo":{"status":"ok","timestamp":1578615569973,"user_tz":300,"elapsed":390,"user":{"displayName":"Christopher Lattanzio","photoUrl":"https://lh3.googleusercontent.com/a-/AAuE7mAZZPFLSjK4IdG_ds-sFPhjRh5M6TtRV24SIMmy=s64","userId":"16054195019132294960"}},"colab":{"base_uri":"https://localhost:8080/","height":51}},"source":["#Double variable run\n","\n","forecast_col1 = 'Imps'\n","forecast_col2 = 'average_mins_viewed'\n","\n","df.fillna(-99999, inplace=True)\n","\n","# number to forecast out\n","forecast_out = 30 #int(math.ceil(0.01*len(df)))\n","\n","df['label1'] = df[forecast_col1].shift(-forecast_out)\n","df['label2'] = df[forecast_col2].shift(-forecast_out)\n","\n","# define variables\n","X1 = np.array(df.drop(['label1'],1))\n","X2 = np.array(df.drop(['label2'],1))\n","#X = np.array(df.drop([forecast_col],1))\n","# Scale X - all values have to be scaled together\n","\n","X1 = preprocessing.scale(X1)\n","X1 = X1[:-forecast_out]\n","X1_lately = X1[-forecast_out:]\n","\n","df.dropna(inplace=True)\n","y1 = np.array(df['label1'])\n","\n","X2 = preprocessing.scale(X2)\n","X2 = X2[:-forecast_out]\n","X2_lately = X2[-forecast_out:]\n","\n","df.dropna(inplace=True)\n","y2 = np.array(df['label2'])\n","\n","print(len(X1),len(X1_lately),len(y1))\n","print(len(X2),len(X2_lately),len(y2))"],"execution_count":8,"outputs":[{"output_type":"stream","text":["39 30 39\n","39 30 39\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"oE-NWgeZfuQF","colab_type":"code","outputId":"1ec952ad-d64a-4202-d870-719152a8363b","executionInfo":{"status":"ok","timestamp":1578615573164,"user_tz":300,"elapsed":514,"user":{"displayName":"Christopher Lattanzio","photoUrl":"https://lh3.googleusercontent.com/a-/AAuE7mAZZPFLSjK4IdG_ds-sFPhjRh5M6TtRV24SIMmy=s64","userId":"16054195019132294960"}},"colab":{"base_uri":"https://localhost:8080/","height":289}},"source":["#Double variable run\n","\n","# Split testing and training data\n","X1_train, X1_test, y1_train, y1_test = train_test_split(X1, y1 ,test_size = 0.25, random_state=42)\n","X2_train, X2_test, y2_train, y2_test = train_test_split(X2, y2 ,test_size = 0.25, random_state=42)\n","\n","# Train Model - set clf to the model you want to use\n","clf1 = LinearRegression()\n","clf2 = svm.SVR()\n","\n","#clf = LinearRegression()\n","#clf = svm.SVR()\n","#clf = linear_model.Ridge(alpha=.5)\n","# clf = linear_model.Lasso(alpha=0.1)\n","\n","clf1.fit(X1_train, y1_train)\n","accuracy1 = clf1.score(X1_test, y1_test)\n","\n","clf2.fit(X2_train, y2_train)\n","accuracy2 = clf2.score(X2_test, y2_test)\n","#print(accuracy)\n","\n","# Forecast using the older data\n","forecast_set1 = clf1.predict(X1_lately)\n","forecast_set2 = clf2.predict(X2_lately)\n","\n","print(forecast_set1, accuracy1, forecast_out)\n","print(forecast_set2, accuracy2, forecast_out)"],"execution_count":9,"outputs":[{"output_type":"stream","text":["[4850580.30037149 4871300.77307399 4750959.5106507  4703980.19567349\n"," 4807677.64741439 4471674.38872461 4386126.22294938 4465438.75528881\n"," 4700501.07720049 4498143.60942364 4326932.49136837 4356781.95769925\n"," 4512242.21331282 4394914.93100657 4455709.56385682 4470909.97990555\n"," 4285475.33239223 4283579.74045395 4296355.82304467 4391719.60556287\n"," 4238496.05626489 4137603.56557354 4156466.71032537 4154180.49508289\n"," 4158986.66352023 4331771.44529199 4271738.36517206 4176225.76873347\n"," 4305278.26100568 4325827.04850392] -0.25192100413547114 30\n","[1655660.43675139 1655660.26884755 1655660.0182037  1655661.36020018\n"," 1655662.69155359 1655665.4705577  1655665.90035002 1655664.97641328\n"," 1655663.2260298  1655664.95193277 1655664.99483542 1655665.68170714\n"," 1655664.43039289 1655664.75844173 1655664.57422968 1655664.0624264\n"," 1655665.06832282 1655664.17992479 1655665.463382   1655662.38280324\n"," 1655664.01083535 1655662.22440826 1655664.86988464 1655664.82050081\n"," 1655665.47010968 1655664.8901789  1655665.69446465 1655666.03257747\n"," 1655665.24338776 1655665.02396944] -0.0028363163167226535 30\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"G305PJAQgrn2","colab_type":"code","colab":{}},"source":["#Double run\n","\n","df['Forecast1'] = np.nan\n","df['Forecast2'] = np.nan\n","\n","# Set up forecasting dates\n","last_date =df.iloc[-1].name\n","last_unix = last_date.timestamp()\n","one_day = 86400\n","next_unix = last_unix + one_day\n","\n","# add forecast rows to dataframe\n","for j in forecast_set1:\n","  for i in forecast_set2:\n","    next_date = datetime.datetime.fromtimestamp(next_unix)\n","    next_unix += one_day\n","    df.loc[next_date] = [np.nan for _ in range(len(df.columns)-2)] + [j] + [i]\n","\n"],"execution_count":0,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"AUWMQuEvRomO","colab_type":"text"},"source":[""]},{"cell_type":"code","metadata":{"id":"g8-1_PG_gljG","colab_type":"code","outputId":"3908e3ee-ec4f-431b-fcd6-dbac7a2e85d6","executionInfo":{"status":"ok","timestamp":1578615585462,"user_tz":300,"elapsed":4417,"user":{"displayName":"Christopher Lattanzio","photoUrl":"https://lh3.googleusercontent.com/a-/AAuE7mAZZPFLSjK4IdG_ds-sFPhjRh5M6TtRV24SIMmy=s64","userId":"16054195019132294960"}},"colab":{"base_uri":"https://localhost:8080/","height":34}},"source":["# Double Run\n","\n","# plot the forecasts\n","df['airdate'] = df.index\n","\n","import pandas_gbq as gbq\n","gbq.to_gbq(df, 'predictions.Ridge', project_id, if_exists='replace')\n"],"execution_count":11,"outputs":[{"output_type":"stream","text":["1it [00:03,  3.40s/it]\n"],"name":"stderr"}]},{"cell_type":"code","metadata":{"id":"R77M2lY53qmw","colab_type":"code","colab":{}},"source":[""],"execution_count":0,"outputs":[]},{"cell_type":"code","metadata":{"id":"e6yHUjNJ3qpg","colab_type":"code","colab":{}},"source":[""],"execution_count":0,"outputs":[]},{"cell_type":"code","metadata":{"id":"Oi52Uvef3qsX","colab_type":"code","colab":{}},"source":[""],"execution_count":0,"outputs":[]},{"cell_type":"code","metadata":{"id":"9xAbjw3CQ3dt","colab_type":"code","colab":{}},"source":[""],"execution_count":0,"outputs":[]},{"cell_type":"code","metadata":{"id":"A7n-LAdmpc2M","colab_type":"code","colab":{}},"source":["Show_Name_Dummy = {'A.D. BIBLE CONTINUES':1111,'A.P. BIO':1112,'A.P. BIO 3/1':1113,'A.P. BIO 5/30':1114,'A.P. BIO 6/13':1115,'ABBYS':1116,'ABOUT A BOY':1117,'ABOUT A BOY 930 5/13':1118,'ADELE LIVE IN NEW YORK':1119,'AGT CHAMPIONS':1120,'AGT: BEST OFS':1121,'ALLEGIANCE':1122,'AMERICAN COMEDY AWARDS':1123,'AMERICAN DREAM BUILDER4/7':1124,'AMERICAN DREAM BUILDERS':1125,'AMERICAN NINJA WAR 7/3':1126,'AMERICAN NINJA WAR 8P5/26':1127,'AMERICAN NINJA WAR8P 6/4':1128,'AMERICAN NINJA WARR 2/20':1129,'AMERICAN NINJA WARR 3/11':1130,'AMERICAN NINJA WARR 5/17':1131,'AMERICAN NINJA WARR 5/25':1132,'AMERICAN NINJA WARRIOR':1133,'AMERICAN ODYSSEY':1134,'AMERICA\\'S GOT TALENT 6/22':1135,'AMERICA\\'S GOT TALENT:HLDY':1136,'AMERICA\\'S GOT TALENT-TUE':1137,'AMERICA\\'S GOT TALENT-WED':1138,'ANDREW LLOYD WEBBER TRIBT':1139,'APPRENTICE':1140,'APPRENTICE 14':1141,'AQUARIUS':1142,'AQUARIUS 10P 8/27':1143,'AQUARIUS 10P 9/10':1144,'AQUARIUS 10P 9/3':1145,'AQUARIUS 9P 8/27':1146,'AQUARIUS 9P 9/10':1147,'AQUARIUS 9P 9/3':1148,'A-TO-Z':1149,'BAD JUDGE':1150,'BELIEVE':1151,'BELIEVE 3/10':1152,'BEST TIME EVER WITH NPH':1153,'BETTER LATE NVR 10P 1/1':1154,'BETTER LATE THAN NEVER':1155,'BIGGEST LOSER':1156,'BIGGEST LOSER 15':1157,'BIGGEST LOSER 16':1158,'BIGGEST LOSER 2/15':1159,'BILLBOARD MUSIC AWARDS':1160,'BLACKLIST':1161,'BLACKLIST 1/3':1162,'BLACKLIST 2/22':1163,'BLACKLIST 3/29':1164,'BLACKLIST 4/26':1165,'BLACKLIST 9P 4/20':1166,'BLACKLIST 9P 5/18':1167,'BLACKLIST:REDEMPTION':1168,'BLINDSPOT':1169,'BLINDSPOT 5/31':1170,'BRAVE':1171,'BRING THE FUNNY':1172,'BROOKLYN NINE-NINE':1173,'BROOKLYN NINE-NINE 5/16':1174,'CARMICHAEL SHOW 1030P 8/9':1175,'CARMICHAEL SHOW 10P 3/9':1176,'CARMICHAEL SHOW 8P 5/29':1177,'CARMICHAEL SHOW 930':1178,'CARMICHAEL SHOW 930 3/13':1179,'CARMICHAEL SHOW 9P':1180,'CARMICHAEL SHOW-930P 5/31':1181,'CAUGHT ON CAMERA':1182,'CAUGHT ON CAMERA 12/18':1183,'CAUGHT ON CAMERA 3/7':1184,'CAUGHT ON CAMERA 4/11':1185,'CAUGHT ON CAMERA:CANON-1':1186,'CAUGHT ON CAMERA:CANON-2':1187,'CHAMPIONS':1188,'CHICAGO FIRE':1189,'CHICAGO FIRE 3/1':1190,'CHICAGO JUSTICE':1191,'CHICAGO JUSTICE 3/1':1192,'CHICAGO JUSTICE 3/7':1193,'CHICAGO JUSTICE 4/16':1194,'CHICAGO MED':1195,'CHICAGO PD':1196,'CHICAGO PD 1/3':1197,'COLDPLAY:GHOST STORIES':1198,'COMMUNITY':1199,'CONSTANTINE':1200,'CRISIS':1201,'CRISIS 8P-6/21':1202,'CRISIS 9P-6/21':1203,'CROSSBONES':1204,'CROSSBONES 8P-8/2':1205,'CROSSBONES 9P-8/2':1206,'CROWDED':1207,'CROWDED 1030 3/15':1208,'CROWDED 10P 3/15':1209,'CROWDED 9P 4/17':1210,'DARCI LYNN: HOMETOWN XMAS':1211,'DEAL OR NO DEAL 12/3':1212,'DEAL OR NO DEAL 6/9':1213,'DIANA, 7 DAYS':1214,'DRACULA':1215,'ED SHEERAN:LIVE WEMBLY':1216,'ELF:BUDDY\\'S MUSICAL XMAS':1217,'ELLENS GAME OF GAMES':1218,'ELLENS GAME OF GMS 1 1/29':1219,'ELLENS GAME OF GMS 1/2':1220,'ELLENS GAME OF GMS 12/12':1221,'ELVIS ALL STAR TRIBUTE':1222,'EMERALD CITY':1223,'EMMY AWARDS':1224,'ENEMY WITHIN':1225,'FIRST DATES':1226,'FOOD FIGHTERS':1227,'GAME OF SILENCE':1228,'GAME OF SILENCE 4/12':1229,'GAME OF SILENCE 6/5':1230,'GENIUS JR':1231,'GENIUS JR 5/13':1232,'GENIUS JR 5/6':1233,'GOLDEN GLOBE AWARDS':1234,'GOLDEN GLOBES 75TH ANNIV':1235,'GOOD GIRLS':1236,'GOOD PLACE':1237,'GOOD PLACE 9/19':1238,'GREAT NEWS':1239,'GREAT NEWS 8P 12/21':1240,'GREAT NEWS-2':1241,'GRIMM':1242,'GROWING UP FISHER':1243,'GROWING UP FISHER 8P 6/11':1244,'GROWING UP FISHER830 6/11':1245,'GWEN STEFANI CHRISTMAS':1246,'HANNIBAL':1247,'HEARTBEAT':1248,'HEARTBEAT 3/22':1249,'HEROES REBORN':1250,'HOLLYWOOD GAME NIGHT':1251,'HOLLYWOOD GAME NIGHT 9/6':1252,'HOLLYWOOD GAME NT 12/11':1253,'HOLLYWOOD GAME NT 5/23':1254,'HOLLYWOOD GAME NT 5/24':1255,'HOLLYWOOD GAME NT 9P 1/20':1256,'HOLLYWOOD GAME NT 9P 1/27':1257,'HOLLYWOOD GAME NT-MON':1258,'HOLLYWOOD GM NT 7/28':1259,'HOW MURRAY SAVED CHRSTMAS':1260,'I CAN DO THAT':1261,'I FEEL BAD':1262,'I FEEL BAD 830P 12/27':1263,'I FEEL BAD 8P 12/27':1264,'I FEEL BAD 9/19':1265,'IHEARTRADIO COUNTRY FEST':1266,'IHEARTRADIO MUSIC AWARDS':1267,'ILLUSIONISTS':1268,'INBETWEEN':1269,'INSIDE ROYAL WEDDING':1270,'ISLAND: BEAR GRYLLS':1271,'JEFF DUNHAM:UNHINGED':1272,'LAST COMIC STANDING 6/29':1273,'LAST COMIC STANDING 8':1274,'LAST COMIC STANDING 9':1275,'LAW & ORDER:TRUE CRIME':1276,'LAW AND ORDER:SVU':1277,'LEGO JURASSIC WORLD PART1':1278,'LEGO JURASSIC WORLD PART2':1279,'LITTLE BIG SHOTS':1280,'LITTLE BIG SHOTS 12/12':1281,'LITTLE BIG SHOTS 3/18':1282,'LITTLE BIG SHOTS 3/8':1283,'LITTLE BIG SHOTS:4EVR YNG':1284,'LITTLE LATE LILLY S PR SP':1285,'LIVE FROM NEW YORK':1286,'M BUBLE XMAS IN HOLLYWOOD':1287,'MAKING IT':1288,'MAKING OF PETER PAN LIVE!':1289,'MAKING OF WIZ LIVE!':1290,'MANIFEST':1291,'MARLON-1':1292,'MARLON-2':1293,'MARRY ME':1294,'MAT FRANCO\\'S GOT MAGIC':1295,'MAYA & MARTY':1296,'MAYA RUDOLPH SHOW':1297,'MICHAEL BUBLE XMAS IN NY':1298,'MICHAEL BUBLE! 3/20':1299,'MICHAEL BUBLE:SING/SWINGS':1300,'MICHAEL J FOX SHOW':1301,'MIDNIGHT, TEXAS':1302,'MIDNIGHT, TEXAS 9/13':1303,'MISS UNIVERSE PAGEANT.':1304,'MISS USA 2014':1305,'MR ROBINSON 930P':1306,'MR ROBINSON 9P':1307,'MYSTERIES OF LAURA':1308,'NBC 2018 FALL PREVIEW':1309,'NBC 2019 FALL PREVIEW':1310,'NBC:90TH ANNIVERSARY':1311,'NEW AMSTERDAM':1312,'NIGHT SHIFT':1313,'NIGHT SHIFT 3/24':1314,'NYE GAME NIGHT-ANDY COHEN':1315,'ONE BIG HAPPY':1316,'ONE DIRECTION:TV SPECIAL':1317,'PALEY CENTER: GOOD PLACE':1318,'PALEY CENTER: THIS IS US':1319,'PALEY CENTER:WILL & GRACE':1320,'PARENTHOOD':1321,'PARKS AND RECREATION':1322,'PARKS AND RECREATION-830P':1323,'PENTATONIX: NOT SILENT NT':1324,'PEOPLE MAGAZINE AWARDS':1325,'PLAYER':1326,'POWERLESS':1327,'RED NOSE DAY':1328,'RETURN TO DOWNTON SP':1329,'REVERIE':1330,'REVOLUTION':1331,'RISE':1332,'RUNNING WILD: B. GRYLLS':1333,'RUNNING WILD:B GRYLLS 9/1':1334,'RUNNING WILD:B GRYLLS 9/7':1335,'RUNNING WILD:GRYLLS 12/17':1336,'RUNNING WILD:GRYLLS 5/22':1337,'RUNNING WILD:GRYLLS 5/25':1338,'RUNNING WILD:GRYLLS 7/15':1339,'RUNNING WILD:GRYLLS 7/8':1340,'RUNNING WILD:GRYLLS 8/2':1341,'RUNNING WILD:GRYLLS 9/16':1342,'SEAN SAVES THE WORLD':1343,'SETH MEYERS NEW YRS EVE':1344,'SHADES OF BLUE':1345,'SHADES OF BLUE 4/16':1346,'SHADES OF BLUE 9P 5/21':1347,'SING OFF 12/17':1348,'SLAP':1349,'SNL CHRISTMAS':1350,'SNL CHRISTMAS 2016':1351,'SNL PRIME-SAT':1352,'SNL SHORTS':1353,'SNL THANKSGIVING':1354,'SNL WKND UPDATE-PRIME':1355,'SNL:40TH ANNIVERSARY':1356,'SNL:40TH RED CARPET':1357,'SNL\\'S NFL SATURDAY':1358,'SONGLAND':1359,'SPARTAN 7/3':1360,'SPARTAN 9P 6/23':1361,'SPARTAN 9P 7/23':1362,'SPARTAN:TEAM CHALLENGE':1363,'STATE OF AFFAIRS':1364,'STRONG':1365,'STRONG 4/13':1366,'SUPERSTORE':1367,'SUPERSTORE 11/30':1368,'SUPERSTORE 12/28':1369,'SUPERSTORE 12/5':1370,'SUPERSTORE 2/15':1371,'SUPERSTORE 5/16':1372,'SUPERSTORE 5/9':1373,'SUPERSTORE 8/19':1374,'SUPERSTORE-830P 11/10':1375,'TAKEN':1376,'TAXI BROOKLYN':1377,'TELENOVELA':1378,'TELENOVELA 12/28':1379,'TELENOVELA 12/7':1380,'TELENOVELA 2/15':1381,'THIS IS US':1382,'TIMELESS':1383,'TIMELESS 12/20':1384,'TITAN GAMES':1385,'TONIGHT SHOW:VALENTINE\\'S':1386,'TONY BENNETT:CELEBRATE 90':1387,'TRIAL & ERROR':1388,'TRIAL & ERROR 4/13':1389,'TRIAL & ERROR-1':1390,'TRIAL & ERROR-2':1391,'TRIBUTE TO JAMES BURROWS':1392,'TRUTH BE TOLD':1393,'TRUTH BE TOLD 12/25':1394,'TRUTH BE TOLD 8P 12/25':1395,'UNDATEABLE':1396,'UNDATEABLE 830 7/3':1397,'UNDATEABLE 930P':1398,'UNDATEABLE 9P':1399,'VERY PENTATONIX CHRISTMAS':1400,'VILLAGE':1401,'VOICE':1402,'VOICE 11/11':1403,'VOICE 11/12':1404,'VOICE 11/15':1405,'VOICE 3/2':1406,'VOICE 4/13':1407,'VOICE 4/18':1408,'VOICE 4/8':1409,'VOICE 8/21':1410,'VOICE-TUE':1411,'WALL':1412,'WALL 1/3':1413,'WALL 11/22':1414,'WALL 12/27':1415,'WALL 12/4':1416,'WELCOME TO SWEDEN':1417,'WELCOME TO SWEDEN-830P':1418,'WELCOME TO SWEDEN930 8/21':1419,'WELCOME TO SWEDEN930 8/28':1420,'WICKED HALLOWEEN SPECIAL':1421,'WILL & GRACE':1422,'WILL & GRACE 12/5':1423,'WORKING THE ENGELS':1424,'WORLD OF DANCE':1425,'WORLD OF DANCE 2/26':1426,'WORLD OF DANCE 7/25':1427,'YOU, ME & THE APOCALYPSE':1428}\n","\n","Series_Name_Dummy = {'A TO Z':11,'A.D. THE BIBLE CONTINUES':12,'A.P. BIO':13,'ABBY\\'S':14,'ABOUT A BOY':15,'AGT CHAMPIONS':16,'ALLEGIANCE':17,'AMERICAN DREAM BUILDERS':18,'AMERICAN NINJA WARRIOR':19,'AMERICAN ODYSSEY':20,'AMERICA\\'S GOT TALENT':21,'APPRENTICE':22,'AQUARIUS':23,'BAD JUDGE':24,'BELIEVE':25,'BEST TIME EVER WITH NPH':26,'BETTER LATE THAN NEVER':27,'BIGGEST LOSER':28,'BLACKLIST':29,'BLACKLIST: REDEMPTION':30,'BLINDSPOT':31,'BRAVE, THE':32,'BRING THE FUNNY':33,'BROOKLYN NINE-NINE':34,'CARMICHAEL SHOW':35,'CAUGHT ON CAMERA':36,'CELEBRITY APPRENTICE':37,'CHAMPIONS':38,'CHICAGO FIRE':39,'CHICAGO JUSTICE':40,'CHICAGO MED':41,'CHICAGO PD':42,'COMMUNITY':43,'CONSTANTINE':44,'CRISIS':45,'CROSSBONES':46,'CROWDED':47,'DEAL OR NO DEAL':48,'DRACULA':49,'ELLEN\\'S GAME OF GAMES':50,'EMERALD CITY':51,'ENEMY WITHIN':52,'FIRST DATES':53,'FOOD FIGHTERS':54,'GAME OF SILENCE':55,'GENIUS JUNIOR':56,'GOOD GIRLS':57,'GOOD PLACE':58,'GREAT NEWS':59,'GRIMM':60,'GROWING UP FISHER':61,'HANNIBAL':62,'HEARTBEAT':63,'HEROES REBORN':64,'HOLLYWOOD GAME NIGHT':65,'I CAN DO THAT':66,'I FEEL BAD':67,'INBETWEEN':68,'ISLAND':69,'L & O TRUE CRIME: MENENDEZ':70,'LAST COMIC STANDING':71,'LAW & ORDER:SVU':72,'LITTLE BIG SHOTS':73,'LITTLE BIG SHOTS:4EVR YNG':74,'MAKING IT':75,'MANIFEST':76,'MARLON':77,'MARRY ME':78,'MAYA & MARTY':79,'MAYA RUDOLPH SHOW':80,'MICHAEL J FOX SHOW':81,'MIDNIGHT, TEXAS':82,'MR. ROBINSON':83,'MYSTERIES OF LAURA':84,'NEW AMSTERDAM':85,'NIGHT SHIFT':86,'ONE BIG HAPPY':87,'PARENTHOOD':88,'PARKS & RECREATION':89,'PLAYER':90,'POWERLESS':91,'REVERIE':92,'REVOLUTION':93,'RISE':94,'RUNNING WILD BEAR GRYLLS':95,'SEAN SAVES THE WORLD':96,'SHADES OF BLUE':97,'SING OFF':98,'SLAP':99,'SNL PRIMETIME ENCORES':100,'SNL WKND UPDATE':101,'SONGLAND':102,'SPARTAN:TEAM CHALLENGE':103,'SPECIALS':104,'STATE OF AFFAIRS':105,'STRONG':106,'SUPERSTORE':107,'TAKEN':108,'TAXI BROOKLYN':109,'TELENOVELA':110,'THIS IS US':111,'TIMELESS':112,'TITAN GAMES':113,'TRIAL & ERROR':114,'TRUTH BE TOLD':115,'UNDATEABLE':116,'VILLAGE':117,'VOICE':118,'WALL':119,'WELCOME TO SWEDEN':120,'WILL & GRACE':121,'WORKING THE ENGELS':122,'WORLD OF DANCE':123,'YOU, ME & THE APOCALYPSE':124}\n"," \n","\n","df_full['Show_Name_Dummy'] = df_full.Show_Name\n","\n","df_full['Series_Name_Dummy'] = df_full.Series_Name\n"," \n","\n","df_full['Show_Name_Dummy'] = [Show_Name_Dummy[item] for item in df_full['Show_Name_Dummy']] \n","\n","df_full['Series_Name_Dummy'] = [Series_Name_Dummy[item] for item in df_full['Series_Name_Dummy']]"],"execution_count":0,"outputs":[]}]}